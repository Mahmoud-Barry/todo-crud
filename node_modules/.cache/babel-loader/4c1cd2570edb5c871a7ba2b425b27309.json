{"ast":null,"code":"import _slicedToArray from\"/home/docteurjs/Bureau/Bakeli/todo-crud/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import CheckCircleIcon from\"@mui/icons-material/CheckCircle\";import EditIcon from\"@mui/icons-material/Edit\";import DeleteIcon from\"@mui/icons-material/Delete\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Todo(_ref){var todo=_ref.todo,toggleComplete=_ref.toggleComplete,handleDelete=_ref.handleDelete,handleEdit=_ref.handleEdit;var _React$useState=React.useState(todo.title),_React$useState2=_slicedToArray(_React$useState,2),newTitle=_React$useState2[0],setNewTitle=_React$useState2[1];var handleChange=function handleChange(e){e.preventDefault();if(todo.complete===true){setNewTitle(todo.title);}else{todo.title=\"\";setNewTitle(e.target.value);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"todo\",children:[/*#__PURE__*/_jsx(\"input\",{style:{textDecoration:todo.completed&&\"line-through\"},type:\"text\",value:todo.title===\"\"?newTitle:todo.title,className:\"list\",onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"button-complete\",onClick:function onClick(){return toggleComplete(todo);},children:/*#__PURE__*/_jsx(CheckCircleIcon,{id:\"i\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"button-edit\",onClick:function onClick(){return handleEdit(todo,newTitle);},children:/*#__PURE__*/_jsx(EditIcon,{id:\"i\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"button-delete\",onClick:function onClick(){return handleDelete(todo.id);},children:/*#__PURE__*/_jsx(DeleteIcon,{id:\"i\"})})]})]});}","map":{"version":3,"sources":["/home/docteurjs/Bureau/Bakeli/todo-crud/src/components/Todo.js"],"names":["React","CheckCircleIcon","EditIcon","DeleteIcon","Todo","todo","toggleComplete","handleDelete","handleEdit","useState","title","newTitle","setNewTitle","handleChange","e","preventDefault","complete","target","value","textDecoration","completed","id"],"mappings":"6HACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,C,wFACA,cAAe,SAASC,CAAAA,IAAT,MAAkE,IAAlDC,CAAAA,IAAkD,MAAlDA,IAAkD,CAA5CC,cAA4C,MAA5CA,cAA4C,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAdC,UAAc,MAAdA,UAAc,CAC/E,oBAAgCR,KAAK,CAACS,QAAN,CAAeJ,IAAI,CAACK,KAApB,CAAhC,oDAAOC,QAAP,qBAAiBC,WAAjB,qBAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAIV,IAAI,CAACW,QAAL,GAAkB,IAAtB,CAA4B,CAC1BJ,WAAW,CAACP,IAAI,CAACK,KAAN,CAAX,CACD,CAFD,IAEO,CACLL,IAAI,CAACK,KAAL,CAAa,EAAb,CACAE,WAAW,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX,CACD,CACF,CARD,CASA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,cACE,KAAK,CAAE,CAAEC,cAAc,CAAEd,IAAI,CAACe,SAAL,EAAkB,cAApC,CADT,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEf,IAAI,CAACK,KAAL,GAAe,EAAf,CAAoBC,QAApB,CAA+BN,IAAI,CAACK,KAH7C,CAIE,SAAS,CAAC,MAJZ,CAKE,QAAQ,CAAEG,YALZ,EADF,cAQE,oCACE,eACE,SAAS,CAAC,iBADZ,CAEE,OAAO,CAAE,yBAAMP,CAAAA,cAAc,CAACD,IAAD,CAApB,EAFX,uBAIE,KAAC,eAAD,EAAiB,EAAE,CAAC,GAApB,EAJF,EADF,cAOE,eACE,SAAS,CAAC,aADZ,CAEE,OAAO,CAAE,yBAAMG,CAAAA,UAAU,CAACH,IAAD,CAAOM,QAAP,CAAhB,EAFX,uBAIE,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAJF,EAPF,cAaE,eAAQ,SAAS,CAAC,eAAlB,CAAkC,OAAO,CAAE,yBAAMJ,CAAAA,YAAY,CAACF,IAAI,CAACgB,EAAN,CAAlB,EAA3C,uBACE,KAAC,UAAD,EAAY,EAAE,CAAC,GAAf,EADF,EAbF,GARF,GADF,CA4BD","sourcesContent":["\nimport React from \"react\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nexport default function Todo({ todo, toggleComplete, handleDelete, handleEdit,}) {\n  const [newTitle, setNewTitle] = React.useState(todo.title);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    if (todo.complete === true) {\n      setNewTitle(todo.title);\n    } else {\n      todo.title = \"\";\n      setNewTitle(e.target.value);\n    }\n  };\n  return (\n    <div className=\"todo\">\n      <input\n        style={{ textDecoration: todo.completed && \"line-through\" }}\n        type=\"text\"\n        value={todo.title === \"\" ? newTitle : todo.title}\n        className=\"list\"\n        onChange={handleChange}\n      />\n      <div>\n        <button\n          className=\"button-complete\"\n          onClick={() => toggleComplete(todo)}\n        >\n          <CheckCircleIcon id=\"i\" />\n        </button>\n        <button\n          className=\"button-edit\"\n          onClick={() => handleEdit(todo, newTitle)}\n        >\n          <EditIcon id=\"i\" />\n        </button>\n        <button className=\"button-delete\" onClick={() => handleDelete(todo.id)}>\n          <DeleteIcon id=\"i\" />\n        </button>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}